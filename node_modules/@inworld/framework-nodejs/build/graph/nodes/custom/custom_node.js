"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomNode = void 0;
const common_1 = require("../../../common");
const custom_node_wrapper_1 = require("./custom_node_wrapper");
/**
 * Base class for creating custom graph processing nodes.
 * Provides a framework for implementing custom data transformation logic.
 */
class CustomNode {
    /**
     * Creates a new CustomNode instance.
     *
     * @param id - Unique identifier for the node
     */
    constructor(id) {
        this.id = id;
    }
    /**
     * Processes the input data.
     * This method must be implemented by subclasses.
     *
     * @param _inputs - Array of input data that implements the CustomInputDataType enum
     * @throws InworldError if not implemented by subclass
     */
    process(_inputs) {
        throw new common_1.InworldError('Process method must be implemented');
    }
    /**
     * Builds a CustomNodeWrapper for this node.
     *
     * @returns New CustomNodeWrapper instance that wraps this node
     */
    build() {
        if (!this.input || !this.output) {
            throw new common_1.InworldError('Input and output types must be set');
        }
        return new custom_node_wrapper_1.CustomNodeWrapper({
            id: this.id,
            process: (inputs) => this.process(inputs),
            inputTypes: Array.isArray(this.input) ? this.input : [this.input],
            outputType: this.output,
        });
    }
}
exports.CustomNode = CustomNode;
