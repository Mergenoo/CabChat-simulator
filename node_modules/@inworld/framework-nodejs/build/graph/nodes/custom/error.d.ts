/**
 * Enum representing status codes for custom node errors that are handled by C++ code.
 * @internal
 */
export declare enum ExternalProcessStatusCode {
    Ok = 0,
    Cancelled = 1,
    Unknown = 2,
    InvalidArgument = 3,
    DeadlineExceeded = 4,
    NotFound = 5,
    AlreadyExists = 6,
    PermissionDenied = 7,
    ResourceExhausted = 8,
    FailedPrecondition = 9,
    Aborted = 10,
    OutOfRange = 11,
    Unimplemented = 12,
    Internal = 13,
    Unavailable = 14,
    DataLoss = 15,
    Unauthenticated = 16
}
/**
 * Class for handling custom node errors that are handled by C++ code.
 * @internal
 */
export declare class ExternalProcessError extends Error {
    private status;
    /**
     * Creates a new ExternalProcessError instance.
     *
     * @param message - Error message
     * @param status - Status code
     */
    constructor(message: string, status?: ExternalProcessStatusCode);
    getExternal(): any;
}
