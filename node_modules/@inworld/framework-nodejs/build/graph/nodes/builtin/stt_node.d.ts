import { STT } from '../../../primitives/stt';
import { Node, NodePropsInterface } from '../node';
import { STTNodeExecutionConfigPropsInterface } from './node_execution_config';
/**
 * Interface for STT Node creation properties.
 */
export interface STTNodePropsInterface extends NodePropsInterface {
    /** STT (Speech-to-Text) instance for audio transcription */
    stt: STT;
    /** Execution configuration for the STT node */
    executionConfig?: STTNodeExecutionConfigPropsInterface;
}
/**
 * Node for speech-to-text conversion in the graph.
 * Processes audio input to convert speech to text.
 */
export declare class STTNode extends Node {
    private stt;
    private executionConfig;
    /**
     * Creates a new STTNode instance.
     *
     * @param props - STT node creation properties
     * @internal
     */
    constructor(props: STTNodePropsInterface);
    /**
     * Cleans up resources associated with this STT node.
     */
    destroy(): void;
}
