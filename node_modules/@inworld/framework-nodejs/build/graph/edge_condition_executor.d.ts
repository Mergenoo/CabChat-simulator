import { ExternalReference } from '../common/types';
/**
 * Type for edge condition callback function.
 * The callback receives the input data from source node and should return a boolean indicating
 * whether the edge should be traversed. Input has the same type as the source node output.
 */
export type EdgeConditionCallback = (input: any) => Promise<boolean> | boolean;
/**
 * EdgeConditionExecutor class for implementing conditional edge logic.
 * Allows edges to be traversed only when specific conditions are met.
 */
export declare class EdgeConditionExecutor {
    private external;
    private externalCallback;
    /**
     * Creates a new EdgeConditionExecutor with a condition callback.
     *
     * @param condition - Function that determines if the edge should be traversed
     */
    constructor(condition: EdgeConditionCallback);
    /**
     * Gets the external reference for use with C++ bindings.
     *
     * @returns External reference pointer
     */
    getExternal(): ExternalReference;
    /**
     * Cleans up resources associated with this executor.
     */
    destroy(): void;
    private getInputData;
}
