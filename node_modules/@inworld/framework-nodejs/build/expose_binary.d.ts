import koffi = require('koffi');
export declare const LLMFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const RemoteLLMConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setProvider: koffi.KoffiFunction;
    setModelName: koffi.KoffiFunction;
    setAPIKey: koffi.KoffiFunction;
};
export declare const LocalLLMConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setModelPath: koffi.KoffiFunction;
    setDevice: koffi.KoffiFunction;
};
export declare const DeviceFunctions: {
    getDeviceRegistryInstance: koffi.KoffiFunction;
    getAvailableDevices: koffi.KoffiFunction;
    getDevicesSize: koffi.KoffiFunction;
    getDevice: koffi.KoffiFunction;
    getDeviceType: koffi.KoffiFunction;
};
export declare const TextConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setMaxTokens: koffi.KoffiFunction;
    setRepetitionPenalty: koffi.KoffiFunction;
    setTopP: koffi.KoffiFunction;
    setMaxPrompt: koffi.KoffiFunction;
    setTemperature: koffi.KoffiFunction;
    setFrequencyPenalty: koffi.KoffiFunction;
    setPresencePenalty: koffi.KoffiFunction;
    setStopSequences: koffi.KoffiFunction;
};
export declare const LLMInterfaceFunctions: {
    createRemote: Function;
    createLocal: Function;
    delete: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    generateTextFromPrompt: Function;
    generateTextFromMessages: Function;
};
export declare const LLMJinjaInterfaceFunctions: {
    renderJinja: Function;
};
export declare const VectorMapStringStringFunctions: {
    newVector: koffi.KoffiFunction;
    deleteVector: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
};
export declare const MapStringStringFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    set: koffi.KoffiFunction;
};
export declare const InputStreamFunctions: {
    isOK: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    hasNext: koffi.KoffiFunction;
    read: Function;
    deleteStream: koffi.KoffiFunction;
};
export declare const InworldStringFunctions: {
    get: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
};
export declare const StatusFunctions: {
    toString: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    createStatus: koffi.KoffiFunction;
};
export declare const TextEmbedderFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const LocalTextEmbedderConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setModelPath: koffi.KoffiFunction;
    setDevice: koffi.KoffiFunction;
};
export declare const RemoteTextEmbedderConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setAPIKey: koffi.KoffiFunction;
    setModelName: koffi.KoffiFunction;
    setProvider: koffi.KoffiFunction;
};
export declare const TextEmbedderInterfaceFunctions: {
    createWithLocalConfig: Function;
    createWithRemoteConfig: Function;
    deleteStatusOrInterface: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    embed: Function;
    embedBatch: Function;
};
export declare const OptionalTextEmbedderInterfaceFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    copy: koffi.KoffiFunction;
    hasValue: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    reset: koffi.KoffiFunction;
};
export declare const VectorStringFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
};
export declare const VectorFloatFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
};
export declare const VectorVectorFloatFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    clear: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
};
export declare const EmbeddingsStatusFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const BatchEmbeddingsStatusFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const TTSInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    synthesizeSpeech: Function;
};
export declare const SpeechSynthesisPreprocessingConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setNormalizeText: koffi.KoffiFunction;
};
export declare const SpeechSynthesisPostprocessingConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setSampleRate: koffi.KoffiFunction;
    setTrimSilence: koffi.KoffiFunction;
};
export declare const SpeechSynthesisInferenceConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setAlpha: koffi.KoffiFunction;
    setBeta: koffi.KoffiFunction;
    setDiffusionSteps: koffi.KoffiFunction;
    setSpeechTempo: koffi.KoffiFunction;
};
export declare const InworldSpeechSynthesisConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setModelId: koffi.KoffiFunction;
    setPreprocessing: koffi.KoffiFunction;
    setPostprocessing: koffi.KoffiFunction;
    setInference: koffi.KoffiFunction;
};
export declare const SpeechSynthesisConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    getInworldConfig: koffi.KoffiFunction;
};
export declare const VoiceFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setSpeakerId: koffi.KoffiFunction;
};
export declare const SpeechChunkFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    getWaveform: koffi.KoffiFunction;
    getSampleRate: koffi.KoffiFunction;
    getPhonemeTimestamps: koffi.KoffiFunction;
};
export declare const PhonemeTimestampFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    getPhoneme: koffi.KoffiFunction;
    getStartTimeSec: koffi.KoffiFunction;
};
export declare const PhonemeTimestampVectorFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
};
export declare const SpeechChunkStatusFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const SpeechChunkInputStreamFunctions: {
    isOK: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    getStream: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    deleteStream: koffi.KoffiFunction;
    hasNext: koffi.KoffiFunction;
    read: Function;
};
export declare const TTSFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createLocalTTS: Function;
    createRemoteTTS: Function;
};
export declare const TTSInterfaceStatusFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const LocalTTSConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setModelPath: koffi.KoffiFunction;
    setPromptsPath: koffi.KoffiFunction;
    setDevice: koffi.KoffiFunction;
    setSynthesisConfig: koffi.KoffiFunction;
};
export declare const RemoteTTSConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setSynthesisConfig: koffi.KoffiFunction;
    setApiKey: koffi.KoffiFunction;
};
export declare const KnowledgeRecordFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setText: koffi.KoffiFunction;
    setEmbedding: koffi.KoffiFunction;
    setMetadata: koffi.KoffiFunction;
};
export declare const VectorKnowledgeRecordFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
};
export declare const VectorTopicThresholdFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
};
export declare const SafetyConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setForbiddenTopics: koffi.KoffiFunction;
};
export declare const KnowledgeCollectionFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setKnowledgeRecords: koffi.KoffiFunction;
};
export declare const VectorKnowledgeCollectionFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
};
export declare const KnowledgeCollectionFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createKnowledgeCollection: koffi.KoffiFunction;
};
export declare const RetrievalConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setThreshold: koffi.KoffiFunction;
    setTopK: koffi.KoffiFunction;
};
export declare const KnowledgeRetrieverInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    retrieveKnowledge: Function;
};
export declare const KnowledgeRetrieverFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createKnowledgeRetriever: Function;
};
export declare const StatusOrKnowledgeRetrieverInterfaceFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const StatusOrVectorStringFunctions: {
    getValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const EventFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    getSpeech: koffi.KoffiFunction;
    getAction: koffi.KoffiFunction;
    setAgentName: koffi.KoffiFunction;
    setUtterance: koffi.KoffiFunction;
    setName: koffi.KoffiFunction;
    setParameters: koffi.KoffiFunction;
};
export declare const VectorEventFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
};
export declare const MemoryFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createMemory: Function;
};
export declare const MemoryInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    getMemory: Function;
    updateMemory: Function;
};
export declare const StatusOrMemoryInterfaceFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const StatusOrMemorySnapshotFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const MemorySnapshotFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setRollingSummary: koffi.KoffiFunction;
    setFlashMemory: koffi.KoffiFunction;
    setLongTermMemory: koffi.KoffiFunction;
};
export declare const RollingSummaryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setSummarizedText: koffi.KoffiFunction;
    setTurnsSinceLastUpdate: koffi.KoffiFunction;
};
export declare const FlashMemoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setKnowledgeCollection: koffi.KoffiFunction;
};
export declare const LongTermMemoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setKnowledgeCollection: koffi.KoffiFunction;
};
export declare const RollingSummaryConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setNumberOfTurnsBeforeSummary: koffi.KoffiFunction;
    setStartWindowSize: koffi.KoffiFunction;
    setMaxSummarySentences: koffi.KoffiFunction;
    setTextGenerationConfig: koffi.KoffiFunction;
};
export declare const FlashMemoryConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setDialogueCutoffSize: koffi.KoffiFunction;
    setNHistoryTurns: koffi.KoffiFunction;
    setMemoriesSimilarityThreshold: koffi.KoffiFunction;
    setMaxFlashMemory: koffi.KoffiFunction;
    setMaxTopicsPerMemory: koffi.KoffiFunction;
    setTextGenerationConfig: koffi.KoffiFunction;
};
export declare const LongTermMemoryConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setMaxTopicSummaryLenToAppend: koffi.KoffiFunction;
    setMaxNumberOfFlashMemory: koffi.KoffiFunction;
    setMaxNumberOfTopics: koffi.KoffiFunction;
    setTextGenerationConfig: koffi.KoffiFunction;
};
export declare const STTFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const SpeechRecognitionConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const RemoteSTTConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setApiKey: koffi.KoffiFunction;
};
export declare const LocalSTTConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setModelPath: koffi.KoffiFunction;
    setDevice: koffi.KoffiFunction;
};
export declare const AudioChunkFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setSampleRate: koffi.KoffiFunction;
    setData: koffi.KoffiFunction;
};
export declare const STTInterfaceFunctions: {
    createRemote: Function;
    createLocal: Function;
    delete: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    recognizeSpeech: Function;
};
export declare const VoiceActivityDetectionConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setSpeechThreshold: koffi.KoffiFunction;
    getSpeechThreshold: koffi.KoffiFunction;
};
export declare const LocalVADConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setModelPath: koffi.KoffiFunction;
    setDevice: koffi.KoffiFunction;
    setDefaultConfig: koffi.KoffiFunction;
};
export declare const VADFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createVAD: Function;
};
export declare const StatusOrVADInterfaceFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const VADInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    detectVoiceActivity: Function;
};
export declare const EmojiRemoverFunctions: {
    create: Function;
    delete: koffi.KoffiFunction;
};
export declare const StatusOrEmojiRemoverFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const SubstringRemoverFunctions: {
    create: Function;
    delete: koffi.KoffiFunction;
};
export declare const StatusOrSubstringRemoverFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const TextInBracketsRemoverFunctions: {
    create: Function;
    delete: koffi.KoffiFunction;
};
export declare const StatusOrTextInBracketsRemoverFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const SentenceStreamFunctions: {
    create: Function;
    delete: koffi.KoffiFunction;
};
export declare const StatusOrSentenceStreamFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const IntentCompilerInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    compileIntents: Function;
};
export declare const IntentCompilerFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createWithTextEmbedder: Function;
    create: Function;
};
export declare const StatusOrIntentCompilerInterfaceFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
};
export declare const VectorIntentFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
};
export declare const IntentFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setName: koffi.KoffiFunction;
    getName: koffi.KoffiFunction;
    setPhrases: koffi.KoffiFunction;
    getPhrases: koffi.KoffiFunction;
};
export declare const StatusOrVectorCompiledIntentFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
};
export declare const VectorCompiledIntentFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
};
export declare const CompiledIntentFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setName: koffi.KoffiFunction;
    getName: koffi.KoffiFunction;
    setNormalizedPhrases: koffi.KoffiFunction;
    getNormalizedPhrases: koffi.KoffiFunction;
    setPhraseEmbeddings: koffi.KoffiFunction;
    getPhraseEmbeddings: koffi.KoffiFunction;
};
export declare const IntentMatcherConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setEmbedding: koffi.KoffiFunction;
    getEmbedding: koffi.KoffiFunction;
    setLlm: koffi.KoffiFunction;
    getLlm: koffi.KoffiFunction;
    setTopNIntents: koffi.KoffiFunction;
    getTopNIntents: koffi.KoffiFunction;
};
export declare const IntentMatcherCreationConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setMatcherConfig: koffi.KoffiFunction;
    getMatcherConfig: koffi.KoffiFunction;
    setCompiledIntents: koffi.KoffiFunction;
    getCompiledIntents: koffi.KoffiFunction;
};
export declare const IntentMatcherInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    matchIntents: Function;
};
export declare const IntentMatcherFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createWithTextEmbedderAndLLM: Function;
    createWithTextEmbedder: Function;
    createWithLLM: Function;
};
export declare const StatusOrIntentMatcherInterfaceFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
};
export declare const StatusOrVectorIntentMatchFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
};
export declare const VectorIntentMatchFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
};
export declare const IntentMatchFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setIntentName: koffi.KoffiFunction;
    getIntentName: koffi.KoffiFunction;
    setScore: koffi.KoffiFunction;
    getScore: koffi.KoffiFunction;
};
export declare const OptionalEmbeddingMatcherConfigFunctions: {
    newWithValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    hasValue: koffi.KoffiFunction;
    valueConst: koffi.KoffiFunction;
};
export declare const EmbeddingMatcherConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setSimilarityThreshold: koffi.KoffiFunction;
    getSimilarityThreshold: koffi.KoffiFunction;
};
export declare const OptionalLlmMatcherConfigFunctions: {
    newWithValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    valueConst: koffi.KoffiFunction;
};
export declare const LlmMatcherConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setGenerationConfig: koffi.KoffiFunction;
    getGenerationConfig: koffi.KoffiFunction;
    setPromptTemplate: koffi.KoffiFunction;
    getPromptTemplate: koffi.KoffiFunction;
    setEmbeddingSimilarityThreshold: koffi.KoffiFunction;
    getEmbeddingSimilarityThreshold: koffi.KoffiFunction;
    setMaxEmbeddingMatchesForLlm: koffi.KoffiFunction;
    getMaxEmbeddingMatchesForLlm: koffi.KoffiFunction;
};
export declare const OptionalFloatFunctions: {
    newWithValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    hasValue: koffi.KoffiFunction;
    valueConst: koffi.KoffiFunction;
};
export declare const StatusOrIntFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const GraphFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    addNode: koffi.KoffiFunction;
    createEdge: koffi.KoffiFunction;
    setAsStart: koffi.KoffiFunction;
    setAsEnd: koffi.KoffiFunction;
    compileAndReturnRaw: koffi.KoffiFunction;
    visualize: Function;
};
export declare const EdgeWrapperFunctions: {
    setCondition: koffi.KoffiFunction;
    setToOptional: koffi.KoffiFunction;
    build: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const EdgeConditionExecutorFunctions: {
    new: koffi.KoffiFunction;
    getInput: koffi.KoffiFunction;
    setOutput: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const VectorNodeFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
};
export declare const GraphExecutorFunctions: {
    factoryHelperCreate: koffi.KoffiFunction;
    factoryHelperDestroy: koffi.KoffiFunction;
    start: koffi.KoffiFunction;
    stop: koffi.KoffiFunction;
    execute: Function;
    hasMoreResults: Function;
    next: Function;
    closeExecution: koffi.KoffiFunction;
    cleanupAllExecutions: koffi.KoffiFunction;
};
export declare const TextDataFunctions: {
    new: koffi.KoffiFunction;
    toString: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const AudioDataFunctions: {
    new: koffi.KoffiFunction;
    waveForm: koffi.KoffiFunction;
    sampleRate: koffi.KoffiFunction;
};
export declare const ChatMessagesFunctions: {
    new: koffi.KoffiFunction;
    getMessages: koffi.KoffiFunction;
    toString: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const BaseDataFunctions: {
    delete: koffi.KoffiFunction;
    toString: koffi.KoffiFunction;
    errorToString: koffi.KoffiFunction;
    asText: koffi.KoffiFunction;
};
export declare const VectorBaseDataFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
};
export declare const StatusOrBaseDataFunctions: {
    newFromStatus: koffi.KoffiFunction;
    newFromBaseData: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const TTSOutputFunctions: {
    toStream: koffi.KoffiFunction;
    getStream: koffi.KoffiFunction;
    streamHasNext: koffi.KoffiFunction;
    streamRead: koffi.KoffiFunction;
    streamDelete: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getText: koffi.KoffiFunction;
    getAudio: koffi.KoffiFunction;
    audioDelete: koffi.KoffiFunction;
};
export declare const NodeHelperFunctions: {
    createLLMNode: koffi.KoffiFunction;
    deleteLLMNode: koffi.KoffiFunction;
    createSTTNode: koffi.KoffiFunction;
    deleteSTTNode: koffi.KoffiFunction;
    createTTSNode: koffi.KoffiFunction;
    deleteTTSNode: koffi.KoffiFunction;
    createTextChunkingNode: koffi.KoffiFunction;
    deleteTextChunkingNode: koffi.KoffiFunction;
    createIntentNode: koffi.KoffiFunction;
    deleteIntentNode: koffi.KoffiFunction;
    createTextAggregatorNode: koffi.KoffiFunction;
    deleteTextAggregatorNode: koffi.KoffiFunction;
    createKnowledgeNode: koffi.KoffiFunction;
    deleteKnowledgeNode: koffi.KoffiFunction;
};
export declare const SafetyCheckerFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createSafetyChecker: Function;
};
export declare const SafetyCheckerCreationConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setModelWeightsPath: koffi.KoffiFunction;
};
export declare const TopicThresholdFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setTopicName: koffi.KoffiFunction;
    setConfidence: koffi.KoffiFunction;
};
export declare const DetectedTopicFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    getTopicName: koffi.KoffiFunction;
    getConfidence: koffi.KoffiFunction;
};
export declare const VectorDetectedTopicFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
};
export declare const CheckSafetyResponseFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setIsSafe: koffi.KoffiFunction;
    getIsSafe: koffi.KoffiFunction;
    setDetectedTopics: koffi.KoffiFunction;
    getDetectedTopics: koffi.KoffiFunction;
};
export declare const StatusOrCheckSafetyResponseFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const StatusOrSafetyCheckerInterfaceFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const SafetyCheckerInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    checkSafety: Function;
    checkSafetyWithConfig: Function;
};
export declare const TelemetryFunctions: {
    init: koffi.KoffiFunction;
    shutdown: koffi.KoffiFunction;
    configNew: koffi.KoffiFunction;
    configDelete: koffi.KoffiFunction;
    configSetEndpoint: koffi.KoffiFunction;
    configSetApiKey: koffi.KoffiFunction;
    configSetServiceName: koffi.KoffiFunction;
    configSetAppVersion: koffi.KoffiFunction;
    configSetLogger: koffi.KoffiFunction;
    configSetTracer: koffi.KoffiFunction;
    configSetExporterType: koffi.KoffiFunction;
    configLoggerNew: koffi.KoffiFunction;
    configLoggerDelete: koffi.KoffiFunction;
    configLoggerSetLevel: koffi.KoffiFunction;
    configLoggerSetSinkAbslLogs: koffi.KoffiFunction;
    configTracerNew: koffi.KoffiFunction;
    configTracerDelete: koffi.KoffiFunction;
    configTracerSetSamplingRate: koffi.KoffiFunction;
};
export declare const NERInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    extractEntities: Function;
};
export declare const NERCreationConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setEntities: koffi.KoffiFunction;
    getEntities: koffi.KoffiFunction;
};
export declare const NERFactoryFunctions: {
    delete: koffi.KoffiFunction;
    createNER: Function;
};
export declare const StatusOrNERInterfaceFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const EntityMatchFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setEntityName: koffi.KoffiFunction;
    getEntityName: koffi.KoffiFunction;
    setRuleName: koffi.KoffiFunction;
    getRuleName: koffi.KoffiFunction;
    setText: koffi.KoffiFunction;
    getText: koffi.KoffiFunction;
};
export declare const VectorEntityMatchFunctions: {
    new: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const StatusOrVectorEntityMatchFunctions: {
    new: koffi.KoffiFunction;
    isOK: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const EntityFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setName: koffi.KoffiFunction;
    getName: koffi.KoffiFunction;
    setRules: koffi.KoffiFunction;
    getRules: koffi.KoffiFunction;
};
export declare const VectorEntityFunctions: {
    new: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const DictionaryRuleFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setName: koffi.KoffiFunction;
    getName: koffi.KoffiFunction;
    setDisplayName: koffi.KoffiFunction;
    getDisplayName: koffi.KoffiFunction;
    setSynonyms: koffi.KoffiFunction;
    getSynonyms: koffi.KoffiFunction;
};
export declare const VectorDictionaryRuleFunctions: {
    new: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const StreamStringFunctions: {
    toStream: koffi.KoffiFunction;
    getStream: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    deleteStream: koffi.KoffiFunction;
};
export declare const CustomNodeWrapperFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const CustomNodeThreadedProcessExecutorFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setOutput: koffi.KoffiFunction;
    getInputs: koffi.KoffiFunction;
};
export declare const KnowledgeFactoryFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    createKnowledgeWithLocalConfig: Function;
    createKnowledgeWithRemoteConfig: Function;
};
export declare const LocalKnowledgeConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setKnowledgeGetConfig: koffi.KoffiFunction;
    setKnowledgeCompileConfig: koffi.KoffiFunction;
};
export declare const RemoteKnowledgeConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setKnowledgeCompileConfig: koffi.KoffiFunction;
    setApiKey: koffi.KoffiFunction;
};
export declare const KnowledgeGetConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setRetrievalConfig: koffi.KoffiFunction;
};
export declare const ParsingConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setMaxCharsPerChunk: koffi.KoffiFunction;
    setMaxChunksPerDocument: koffi.KoffiFunction;
};
export declare const KnowledgeCompileConfigFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setParsingConfig: koffi.KoffiFunction;
};
export declare const KnowledgeInterfaceFunctions: {
    delete: koffi.KoffiFunction;
    getKnowledge: Function;
    compileKnowledgeFromRecords: Function;
    compileKnowledgeFromFile: Function;
    removeKnowledge: Function;
};
export declare const FileFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setContent: koffi.KoffiFunction;
    setType: koffi.KoffiFunction;
};
export declare const FileContentFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    setBytes: koffi.KoffiFunction;
};
export declare const KnowledgeStatusFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const KnowledgeVectorStatusFunctions: {
    isOK: koffi.KoffiFunction;
    getValue: koffi.KoffiFunction;
    getStatus: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
};
export declare const VectorCharFunctions: {
    new: koffi.KoffiFunction;
    delete: koffi.KoffiFunction;
    pushBack: koffi.KoffiFunction;
    size: koffi.KoffiFunction;
    get: koffi.KoffiFunction;
    memcpyTo: koffi.KoffiFunction;
};
export declare const ExecutionConfigFunctions: {
    newIntentNodeExecutionConfig: koffi.KoffiFunction;
    deleteIntentNodeExecutionConfig: koffi.KoffiFunction;
    setMatcherConfigForIntentNodeExecutionConfig: koffi.KoffiFunction;
    setReportToClientForIntentNodeExecutionConfig: koffi.KoffiFunction;
    newSTTNodeExecutionConfig: koffi.KoffiFunction;
    deleteSTTNodeExecutionConfig: koffi.KoffiFunction;
    setSpeechRecognitionConfigForSTTNodeExecutionConfig: koffi.KoffiFunction;
    setReportToClientForSTTNodeExecutionConfig: koffi.KoffiFunction;
    newTTSNodeExecutionConfig: koffi.KoffiFunction;
    setVoiceForTTSNodeExecutionConfig: koffi.KoffiFunction;
    setSpeechSynthesisConfigForTTSNodeExecutionConfig: koffi.KoffiFunction;
    setReportToClientForTTSNodeExecutionConfig: koffi.KoffiFunction;
    deleteTTSNodeExecutionConfig: koffi.KoffiFunction;
    newLLMNodeExecutionConfig: koffi.KoffiFunction;
    setTextGenerationConfigForLLMNodeExecutionConfig: koffi.KoffiFunction;
    setReportToClientForLLMNodeExecutionConfig: koffi.KoffiFunction;
    deleteLLMNodeExecutionConfig: koffi.KoffiFunction;
};
export declare const KnowledgeNodeHelperFunctions: {
    toKnowledgeRecords: koffi.KoffiFunction;
    getRecords: koffi.KoffiFunction;
    toString: koffi.KoffiFunction;
};
