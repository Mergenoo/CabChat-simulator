import { ExternalReference } from '../../common/types';
/**
 * Class for processing text stream into sentences.
 * Provides functionality to stream text data sentence by sentence.
 */
export declare class SentenceStream {
    private external;
    /**
     * Creates a new SentenceStream instance.
     *
     * @param sentenceStream - External reference to the native sentence stream implementation
     */
    constructor(sentenceStream: ExternalReference);
    /**
     * Creates a new SentenceStream from an input stream.
     *
     * @param inputStream - External reference to the input stream
     * @returns Promise resolving to a new SentenceStream instance
     * @throws InworldError if sentence stream creation fails
     */
    static create(inputStream: ExternalReference): Promise<any>;
    /**
     * Returns an iterator for processing the sentence stream.
     *
     * @returns Stream iterator object
     */
    getIterator(): {
        getStream(): any;
        next(): Promise<{
            text: any;
            done: boolean;
        } | {
            done: boolean;
            text?: undefined;
        }>;
    };
    /**
     * Cleans up resources associated with this sentence stream.
     */
    destroy(): void;
    /**
     * Creates a stream iterator for the given input stream.
     *
     * @param inputStream - External reference to the input stream
     * @returns Stream iterator object
     */
    private streamIterator;
}
