import { ExternalReference } from '../types';
/**
 * Interface representing the result of a TextStream iteration.
 */
export interface TextStreamIterationResult {
    /** The generated text */
    text?: string;
    /** Indicates if the stream is finished */
    done: boolean;
}
/** Type for the next method of the TextStreamIterator. */
export interface TextStreamIterator {
    /**
     * @returns External reference to the native stream implementation
     * @internal
     */
    getStream?: () => ExternalReference;
    /**
     * Asynchronously reads the next item from the stream.
     * @returns Promise resolving to a result object with text content or done flag
     */
    next: () => Promise<TextStreamIterationResult>;
}
/**
 * Class for handling string-based streams.
 * Provides functionality to read text data from native stream implementations.
 * @internal
 */
export declare class TextStream implements TextStreamIterator {
    private stream;
    private onDestroy?;
    /**
     * Creates a new TextStream instance.
     *
     * @param stream - External reference to the native stream implementation
     * @param onDestroy - Optional callback to execute when stream is consumed
     */
    constructor(stream: ExternalReference, onDestroy?: () => void);
    /**
     * Returns the external reference to the native stream implementation.
     *
     * @returns External reference object
     */
    get(): any;
    /**
     * Asynchronously reads the next item from the stream.
     *
     * @returns Promise resolving to a result object with text content or done flag
     * @throws InworldError if reading from the stream fails
     */
    next(): Promise<{
        text: any;
        done: boolean;
    } | {
        done: boolean;
        text?: undefined;
    }>;
    /**
     * Creates a new TextStream instance from an external reference.
     *
     * @param external - External reference to the native stream implementation
     * @returns A new TextStream instance
     * @internal
     */
    static fromExternal(external: ExternalReference): TextStream;
}
