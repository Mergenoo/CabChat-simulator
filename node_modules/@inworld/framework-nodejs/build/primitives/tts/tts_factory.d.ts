import { LocalTTSConfigInterface, RemoteTTSConfigInterface } from './config';
import { TTS } from './tts';
/**
 * Factory class for creating TTS (Text-to-Speech) instances.
 * Provides methods to create both local and remote speech synthesis models.
 */
export declare class TTSFactory {
    /**
     * Creates a local TTS instance.
     *
     * @param config - Configuration for the local TTS
     * @returns Promise resolving to a new TTS instance
     */
    static createLocal(config: LocalTTSConfigInterface): Promise<TTS>;
    /**
     * Creates a remote TTS instance.
     *
     * @param config - Configuration for the remote TTS
     * @returns Promise resolving to a new TTS instance
     */
    static createRemote(config: RemoteTTSConfigInterface): Promise<TTS>;
    /**
     * Internal method to create a TTS instance from a config.
     *
     * @param config - TTS configuration (local or remote)
     * @returns Promise resolving to a new TTS instance
     * @throws InworldError if TTS creation fails
     * @private
     */
    private static create;
}
