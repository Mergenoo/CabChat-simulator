"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalTTSConfig = exports.RemoteTTSConfig = exports.SpeechSynthesisConfig = exports.SpeechSynthesisInferenceConfig = exports.SpeechSynthesisPostprocessingConfig = exports.SpeechSynthesisPreprocessingConfig = void 0;
const expose_binary_1 = require("../../expose_binary");
/**
 * @internal
 */
class SpeechSynthesisPreprocessingConfig {
    // default is true for normalizing text
    constructor(config) {
        var _a;
        this.external = null;
        this.external = expose_binary_1.SpeechSynthesisPreprocessingConfigFunctions.new();
        expose_binary_1.SpeechSynthesisPreprocessingConfigFunctions.setNormalizeText(this.external, (_a = config === null || config === void 0 ? void 0 : config.normalizeText) !== null && _a !== void 0 ? _a : true);
    }
    getExternal() {
        return this.external;
    }
    destroy() {
        if (this.external) {
            expose_binary_1.SpeechSynthesisPreprocessingConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
    // default values gotten from python version of framework
    static getDefault() {
        return {
            normalizeText: true,
        };
    }
}
exports.SpeechSynthesisPreprocessingConfig = SpeechSynthesisPreprocessingConfig;
/**
 * @internal
 */
class SpeechSynthesisPostprocessingConfig {
    constructor(config) {
        this.external = null;
        this.sampleRate = null;
        this.trimSilence = null;
        this.external = expose_binary_1.SpeechSynthesisPostprocessingConfigFunctions.new();
        if ((config === null || config === void 0 ? void 0 : config.sampleRate) != undefined) {
            expose_binary_1.SpeechSynthesisPostprocessingConfigFunctions.setSampleRate(this.external, config.sampleRate);
        }
        if ((config === null || config === void 0 ? void 0 : config.trimSilence) != undefined) {
            expose_binary_1.SpeechSynthesisPostprocessingConfigFunctions.setTrimSilence(this.external, config.trimSilence);
        }
    }
    getExternal() {
        return this.external;
    }
    destroy() {
        if (this.external) {
            expose_binary_1.SpeechSynthesisPostprocessingConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
    // default values gotten from python version of framework
    static getDefault() {
        return {
            sampleRate: 24000,
            trimSilence: true,
        };
    }
}
exports.SpeechSynthesisPostprocessingConfig = SpeechSynthesisPostprocessingConfig;
/**
 * @internal
 */
class SpeechSynthesisInferenceConfig {
    constructor(config) {
        this.external = null;
        this.external = expose_binary_1.SpeechSynthesisInferenceConfigFunctions.new();
        if ((config === null || config === void 0 ? void 0 : config.alpha) != undefined) {
            expose_binary_1.SpeechSynthesisInferenceConfigFunctions.setAlpha(this.external, config.alpha);
        }
        if ((config === null || config === void 0 ? void 0 : config.beta) != undefined) {
            expose_binary_1.SpeechSynthesisInferenceConfigFunctions.setBeta(this.external, config.beta);
        }
        if ((config === null || config === void 0 ? void 0 : config.diffusionSteps) != undefined) {
            expose_binary_1.SpeechSynthesisInferenceConfigFunctions.setDiffusionSteps(this.external, config.diffusionSteps);
        }
        if ((config === null || config === void 0 ? void 0 : config.speechTempo) != undefined) {
            expose_binary_1.SpeechSynthesisInferenceConfigFunctions.setSpeechTempo(this.external, config.speechTempo);
        }
    }
    getExternal() {
        return this.external;
    }
    destroy() {
        if (this.external) {
            expose_binary_1.SpeechSynthesisInferenceConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
    static getDefault() {
        // default values gotten from python version of framework
        return {
            alpha: 0.3,
            beta: 0.7,
            diffusionSteps: 5,
            speechTempo: 1.0,
        };
    }
}
exports.SpeechSynthesisInferenceConfig = SpeechSynthesisInferenceConfig;
/**
 * Class for configuring speech synthesis settings.
 */
class SpeechSynthesisConfig {
    /**
     * Creates a new SpeechSynthesisConfig instance.
     *
     * @param config - Configuration options for speech synthesis
     * @internal
     */
    constructor(config) {
        this.external = null;
        this.preprocessingConfig = null;
        this.postprocessingConfig = null;
        this.inferenceConfig = null;
        this.external = expose_binary_1.SpeechSynthesisConfigFunctions.new();
        if (config === null || config === void 0 ? void 0 : config.modelId) {
            expose_binary_1.InworldSpeechSynthesisConfigFunctions.setModelId(this.getInworldConfig(), config.modelId);
        }
        if (config === null || config === void 0 ? void 0 : config.preprocessingConfig) {
            this.preprocessingConfig = new SpeechSynthesisPreprocessingConfig(config.preprocessingConfig);
            expose_binary_1.InworldSpeechSynthesisConfigFunctions.setPreprocessing(this.getInworldConfig(), this.preprocessingConfig.getExternal());
        }
        if (config === null || config === void 0 ? void 0 : config.postprocessingConfig) {
            this.postprocessingConfig = new SpeechSynthesisPostprocessingConfig(config.postprocessingConfig);
            expose_binary_1.InworldSpeechSynthesisConfigFunctions.setPostprocessing(this.getInworldConfig(), this.postprocessingConfig.getExternal());
        }
        if (config === null || config === void 0 ? void 0 : config.inferenceConfig) {
            this.inferenceConfig = new SpeechSynthesisInferenceConfig(config.inferenceConfig);
            expose_binary_1.InworldSpeechSynthesisConfigFunctions.setInference(this.getInworldConfig(), this.inferenceConfig.getExternal());
        }
    }
    getInworldConfig() {
        return expose_binary_1.SpeechSynthesisConfigFunctions.getInworldConfig(this.external);
    }
    /**
     * Returns the external reference to the speech synthesis configuration.
     * @returns External reference to the speech synthesis configuration
     * @internal
     */
    getExternal() {
        return this.external;
    }
    /**
     * Destroys the speech synthesis configuration.
     * @internal
     */
    destroy() {
        if (this.preprocessingConfig) {
            this.preprocessingConfig.destroy();
            this.preprocessingConfig = null;
        }
        if (this.postprocessingConfig) {
            this.postprocessingConfig.destroy();
            this.postprocessingConfig = null;
        }
        if (this.inferenceConfig) {
            this.inferenceConfig.destroy();
            this.inferenceConfig = null;
        }
        if (this.external) {
            expose_binary_1.SpeechSynthesisConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
    /**
     * Returns the default speech synthesis configuration.
     * @returns Default speech synthesis configuration
     */
    static getDefault() {
        return {
            modelId: 'v3',
            preprocessingConfig: SpeechSynthesisPreprocessingConfig.getDefault(),
            postprocessingConfig: SpeechSynthesisPostprocessingConfig.getDefault(),
            inferenceConfig: SpeechSynthesisInferenceConfig.getDefault(),
        };
    }
}
exports.SpeechSynthesisConfig = SpeechSynthesisConfig;
/**
 * @internal
 */
class RemoteTTSConfig {
    constructor(config) {
        this.synthesisConfig = null;
        this.external = expose_binary_1.RemoteTTSConfigFunctions.new();
        if (config.apiKey) {
            expose_binary_1.RemoteTTSConfigFunctions.setApiKey(this.getExternal(), config.apiKey);
        }
        if (config.synthesisConfig) {
            this.synthesisConfig = new SpeechSynthesisConfig(config.synthesisConfig);
            expose_binary_1.RemoteTTSConfigFunctions.setSynthesisConfig(this.getExternal(), this.synthesisConfig.getExternal());
        }
    }
    getExternal() {
        return this.external;
    }
    destroy() {
        var _a;
        (_a = this.synthesisConfig) === null || _a === void 0 ? void 0 : _a.destroy();
        this.synthesisConfig = null;
        if (this.external) {
            expose_binary_1.RemoteTTSConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.RemoteTTSConfig = RemoteTTSConfig;
/**
 * @internal
 */
class LocalTTSConfig {
    constructor(config) {
        this.synthesisConfig = null;
        this.external = expose_binary_1.LocalTTSConfigFunctions.new();
        if (config.modelPath) {
            expose_binary_1.LocalTTSConfigFunctions.setModelPath(this.getExternal(), config.modelPath);
        }
        if (config.device) {
            expose_binary_1.LocalTTSConfigFunctions.setDevice(this.getExternal(), config.device.getExternal());
        }
        if (config.promptsPath) {
            expose_binary_1.LocalTTSConfigFunctions.setPromptsPath(this.getExternal(), config.promptsPath);
        }
        if (config.synthesisConfig) {
            this.synthesisConfig = new SpeechSynthesisConfig(config.synthesisConfig);
            expose_binary_1.LocalTTSConfigFunctions.setSynthesisConfig(this.getExternal(), this.synthesisConfig.getExternal());
        }
    }
    getExternal() {
        return this.external;
    }
    destroy() {
        var _a;
        (_a = this.synthesisConfig) === null || _a === void 0 ? void 0 : _a.destroy();
        this.synthesisConfig = null;
        if (this.external) {
            expose_binary_1.LocalTTSConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.LocalTTSConfig = LocalTTSConfig;
