import { ExternalReference } from '../../common/types';
import { CompiledIntent } from './compiled_intent';
import { EmbeddingMatcherConfigInterface } from './embedding_matcher_config';
import { IntentMatcherConfig } from './intent_matcher_config';
import { LLMMatcherConfigInterface } from './llm_matcher_config';
/**
 * Interface for configuring intent matcher creation.
 */
export interface IntentMatcherCreationConfigInterface {
    /** Maximum number of top intents to return in matches */
    topNIntents?: number;
    /** Configuration for embedding-based intent matching */
    embeddingMatcherConfig?: EmbeddingMatcherConfigInterface;
    /** Configuration for LLM-based intent matching */
    llmMatcherConfig?: LLMMatcherConfigInterface;
    /** Array of compiled intents to match against */
    compiledIntents: CompiledIntent[];
}
/**
 * Class for configuring intent matcher creation.
 * Manages settings for creating intent matchers with specific configurations.
 * @internal
 */
export declare class IntentMatcherCreationConfig {
    private external;
    private intentMatcherConfig;
    private compiledIntentsVector;
    /**
     * Creates a new IntentMatcherCreationConfig instance.
     *
     * @param config - Configuration parameters for intent matcher creation
     */
    constructor(config: IntentMatcherCreationConfigInterface);
    /**
     * Gets the matcher configuration.
     *
     * @returns Intent matcher configuration or null if not set
     */
    getMatcherConfig(): IntentMatcherConfig | null;
    /**
     * Sets the compiled intents to match against.
     *
     * @param compiledIntents - Array of compiled intents
     * @private
     */
    private setCompiledIntents;
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal(): ExternalReference;
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy(): void;
}
