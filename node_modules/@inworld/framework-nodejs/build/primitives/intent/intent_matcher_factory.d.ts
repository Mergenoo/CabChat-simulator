import { TextEmbedder } from '../../primitives/embedder';
import { LLM } from '../../primitives/llm';
import { IntentMatcher } from './intent_matcher';
import { IntentMatcherCreationConfigInterface } from './intent_matcher_creation_config';
/**
 * Interface for intent matcher factory parameters.
 */
export interface IntentMatcherFactoryInterface {
    /** Configuration for intent matcher creation */
    config: IntentMatcherCreationConfigInterface;
    /** Optional text embedder for embedding-based matching */
    textEmbedder?: TextEmbedder;
    /** Optional LLM for LLM-based matching */
    llm?: LLM;
}
/**
 * Factory class for creating IntentMatcher instances.
 * Provides methods to create intent matchers with different configurations.
 */
export declare class IntentMatcherFactory {
    /**
     * Creates a new IntentMatcher instance.
     * Supports different combinations of dependencies (embedder and/or LLM).
     *
     * @param props - Configuration for intent matcher creation
     * @param props.config - Configuration for intent matcher creation
     * @param props.textEmbedder - Text embedder for embedding-based matching
     * @param props.llm - Optional LLM for LLM-based matching
     * @returns Promise resolving to a new IntentMatcher instance
     * @throws InworldError if creation fails
     */
    static create(props: IntentMatcherFactoryInterface): Promise<IntentMatcher>;
}
