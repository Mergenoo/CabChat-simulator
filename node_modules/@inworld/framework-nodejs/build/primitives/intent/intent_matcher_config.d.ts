import { ExternalReference } from '../../common/types';
import { EmbeddingMatcherConfigInterface } from './embedding_matcher_config';
import { LLMMatcherConfigInterface } from './llm_matcher_config';
/**
 * Interface for configuring intent matcher behavior.
 */
export interface IntentMatcherConfigInterface {
    /** Maximum number of top intents to return in matches */
    topNIntents?: number;
    /** Configuration for embedding-based intent matching */
    embeddingMatcherConfig?: EmbeddingMatcherConfigInterface;
    /** Configuration for LLM-based intent matching */
    llmMatcherConfig?: LLMMatcherConfigInterface;
}
/**
 * Class for configuring intent matcher behavior.
 * Manages parameters that control how intents are matched and scored.
 * @internal
 */
export declare class IntentMatcherConfig {
    private external;
    private embeddingMatcherConfig;
    private llmMatcherConfig;
    /**
     * Creates a new IntentMatcherConfig instance.
     *
     * @param config - Configuration parameters for intent matching
     */
    constructor(config: IntentMatcherConfigInterface);
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal(): ExternalReference;
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy(): void;
}
