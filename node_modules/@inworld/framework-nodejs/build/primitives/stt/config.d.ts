import { Device } from '../../core';
/**
 * Interface for configuring remote STT services.
 */
export interface RemoteSTTConfigInterface {
    /** API key for authentication with the remote service */
    apiKey: string;
}
/**
 * Interface for configuring local STT execution.
 */
export interface LocalSTTConfigInterface {
    /** Path to the local model file */
    modelPath: string;
    /** Computation device to use for model execution */
    device?: Device;
}
/**
 * Union type for STT configuration options.
 */
export type STTConfigInterface = RemoteSTTConfigInterface | LocalSTTConfigInterface;
/**
 * Interface for configuring speech recognition settings.
 */
export interface SpeechRecognitionConfigInterface {
}
/**
 * Class for configuring remote STT services.
 * Manages connection settings and authentication for cloud-based speech recognition.
 * @internal
 */
export declare class RemoteSTTConfig {
    private external;
    /**
     * Creates a new RemoteSTTConfig instance.
     *
     * @param config - Configuration parameters for remote STT
     */
    constructor(config: RemoteSTTConfigInterface);
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal(): any;
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy(): void;
}
/**
 * Class for configuring local STT execution.
 * Manages settings for running speech recognition models on local hardware.
 * @internal
 */
export declare class LocalSTTConfig {
    private external;
    /**
     * Creates a new LocalSTTConfig instance.
     *
     * @param config - Configuration parameters for local STT
     */
    constructor(config: LocalSTTConfigInterface);
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal(): any;
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy(): void;
}
export declare class SpeechRecognitionConfig {
    private external;
    constructor(_config?: SpeechRecognitionConfigInterface);
    getExternal(): any;
    destroy(): void;
}
