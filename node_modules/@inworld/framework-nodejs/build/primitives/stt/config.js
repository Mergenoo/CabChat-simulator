"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpeechRecognitionConfig = exports.LocalSTTConfig = exports.RemoteSTTConfig = void 0;
const expose_binary_1 = require("../../expose_binary");
/**
 * Class for configuring remote STT services.
 * Manages connection settings and authentication for cloud-based speech recognition.
 * @internal
 */
class RemoteSTTConfig {
    /**
     * Creates a new RemoteSTTConfig instance.
     *
     * @param config - Configuration parameters for remote STT
     */
    constructor(config) {
        this.external = expose_binary_1.RemoteSTTConfigFunctions.new();
        if (config.apiKey) {
            expose_binary_1.RemoteSTTConfigFunctions.setApiKey(this.external, config.apiKey);
        }
    }
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal() {
        return this.external;
    }
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy() {
        if (this.external) {
            expose_binary_1.RemoteSTTConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.RemoteSTTConfig = RemoteSTTConfig;
/**
 * Class for configuring local STT execution.
 * Manages settings for running speech recognition models on local hardware.
 * @internal
 */
class LocalSTTConfig {
    /**
     * Creates a new LocalSTTConfig instance.
     *
     * @param config - Configuration parameters for local STT
     */
    constructor(config) {
        this.external = expose_binary_1.LocalSTTConfigFunctions.new();
        if (config.modelPath) {
            expose_binary_1.LocalSTTConfigFunctions.setModelPath(this.external, config.modelPath);
        }
        if (config.device) {
            expose_binary_1.LocalSTTConfigFunctions.setDevice(this.external, config.device.getExternal());
        }
    }
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal() {
        return this.external;
    }
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy() {
        if (this.external) {
            expose_binary_1.LocalSTTConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.LocalSTTConfig = LocalSTTConfig;
class SpeechRecognitionConfig {
    constructor(_config = {}) {
        this.external = expose_binary_1.SpeechRecognitionConfigFunctions.new();
    }
    getExternal() {
        return this.external;
    }
    destroy() {
        if (this.external) {
            expose_binary_1.SpeechRecognitionConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.SpeechRecognitionConfig = SpeechRecognitionConfig;
