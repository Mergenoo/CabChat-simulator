"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalTextEmbedderConfig = exports.RemoteTextEmbedderConfig = void 0;
const common_1 = require("../../common");
const expose_binary_1 = require("../../expose_binary");
/**
 * Class for configuring remote text embedder settings.
 * Manages parameters for cloud-based embedding services.
 * @internal
 */
class RemoteTextEmbedderConfig {
    /**
     * Creates a new RemoteTextEmbedderConfig instance.
     *
     * @param config - Configuration parameters for remote text embedder
     */
    constructor(config) {
        var _a;
        this.external = expose_binary_1.RemoteTextEmbedderConfigFunctions.new();
        if (config.apiKey) {
            expose_binary_1.RemoteTextEmbedderConfigFunctions.setAPIKey(this.external, config.apiKey);
        }
        if (config.modelName) {
            expose_binary_1.RemoteTextEmbedderConfigFunctions.setModelName(this.external, config.modelName);
        }
        expose_binary_1.RemoteTextEmbedderConfigFunctions.setProvider(this.external, (_a = config.provider) !== null && _a !== void 0 ? _a : common_1.DEFAULT_PROVIDER);
    }
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal() {
        return this.external;
    }
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy() {
        if (this.external) {
            expose_binary_1.RemoteTextEmbedderConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.RemoteTextEmbedderConfig = RemoteTextEmbedderConfig;
/**
 * Class for configuring local text embedder settings.
 * Manages parameters for locally running embedding models.
 * @internal
 */
class LocalTextEmbedderConfig {
    /**
     * Creates a new LocalTextEmbedderConfig instance.
     *
     * @param config - Configuration parameters for local text embedder
     */
    constructor(config) {
        this.external = expose_binary_1.LocalTextEmbedderConfigFunctions.new();
        if (config.modelPath) {
            expose_binary_1.LocalTextEmbedderConfigFunctions.setModelPath(this.external, config.modelPath);
        }
        if (config.device) {
            expose_binary_1.LocalTextEmbedderConfigFunctions.setDevice(this.external, config.device.getExternal());
        }
    }
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal() {
        return this.external;
    }
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy() {
        if (this.external) {
            expose_binary_1.LocalTextEmbedderConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.LocalTextEmbedderConfig = LocalTextEmbedderConfig;
