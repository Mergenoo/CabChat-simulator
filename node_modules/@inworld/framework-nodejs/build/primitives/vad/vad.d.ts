import { AudioChunkInterface, ExternalReference } from '../../common/types';
/**
 * Class for Voice Activity Detection (VAD).
 * Provides functionality to detect voice/speech in audio data.
 */
export declare class VAD {
    private vad;
    /**
     * Creates a new VAD instance.
     *
     * @param vad - External reference to the native VAD implementation
     * @internal
     */
    constructor(vad: ExternalReference);
    /**
     * Returns the external reference to the native VAD implementation.
     *
     * @returns External reference object
     * @internal
     */
    getExternal(): any;
    /**
     * Detects if voice activity is present in the provided audio data.
     *
     * @param audio - Audio data to analyze
     * @param speechThreshold - Optional threshold for speech detection sensitivity
     * @returns Promise resolving to a detection result.
     * The result is representing the sample index where speech is detected, or `-1` if
     * no speech is found.
     * @throws InworldError if detection fails
     */
    detectVoiceActivity(audio: AudioChunkInterface, speechThreshold?: number): Promise<number>;
    /**
     * Cleans up resources associated with this VAD instance.
     */
    destroy(): void;
}
