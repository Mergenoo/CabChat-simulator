import { Device } from '../../core';
/**
 * Interface for configuring local VAD execution.
 */
export interface LocalVADConfigInterface {
    /** Path to the local model file */
    modelPath: string;
    /** Computation device to use for model execution */
    device?: Device;
    /** Threshold for speech detection sensitivity */
    speechThreshold?: number;
}
/**
 * Class for configuring voice activity detection parameters.
 * Controls the sensitivity and behavior of voice detection.
 * @internal
 */
export declare class VoiceActivityDetectionConfig {
    private external;
    /**
     * Creates a new VoiceActivityDetectionConfig instance.
     *
     * @param speechThreshold - Optional threshold for speech detection sensitivity (higher values increase sensitivity)
     */
    constructor(speechThreshold?: number);
    /**
     * Gets the current speech threshold setting.
     *
     * @returns Current speech threshold value
     */
    getSpeechThreshold(): any;
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal(): any;
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy(): void;
}
/**
 * Class for configuring local VAD execution.
 * Manages settings for running voice activity detection models on local hardware.
 * @internal
 */
export declare class LocalVADConfig {
    private external;
    private config;
    /**
     * Creates a new LocalVADConfig instance.
     *
     * @param config - Configuration parameters for local VAD
     * @internal
     */
    constructor(config: LocalVADConfigInterface);
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal(): any;
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy(): void;
}
