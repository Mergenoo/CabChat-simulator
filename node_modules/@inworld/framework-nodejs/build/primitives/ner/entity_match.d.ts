import { ExternalReference } from '../../common/types';
/**
 * Class representing a matched entity in text.
 * Contains information about an entity detected during named entity recognition.
 */
export declare class EntityMatch {
    private entityName;
    private ruleName;
    private text;
    /**
     * Creates a new EntityMatch instance.
     *
     * @param external - External reference to the native entity match implementation
     * @internal
     */
    constructor(external: ExternalReference);
    /**
     * Gets the name of the entity that was matched.
     *
     * @returns Entity name or null if not available
     */
    getEntityName(): string | null;
    /**
     * Gets the specific rule that triggered this match.
     *
     * @returns Rule name or null if not available
     */
    getRuleName(): string | null;
    /**
     * Gets the text that was matched.
     *
     * @returns Matched text string or null if not available
     */
    getText(): string | null;
}
/**
 * Class for managing collections of EntityMatch objects.
 * Provides functionality to work with multiple entity matches.
 * @internal
 */
export declare class VectorEntityMatch {
    private external;
    /**
     * Creates a new VectorEntityMatch collection.
     *
     * @param external - External reference to the native vector implementation
     */
    constructor(external: ExternalReference);
    /**
     * Converts a native vector of entity matches to an array of EntityMatch objects.
     *
     * @param external - External reference to a native entity match vector
     * @returns Array of EntityMatch objects
     */
    static toArray(external: ExternalReference): EntityMatch[];
    /**
     * Returns the external reference to the native vector implementation.
     *
     * @returns External reference object
     */
    getExternal(): ExternalReference;
    /**
     * Cleans up resources associated with this entity match collection.
     */
    destroy(): void;
}
