import { ExternalReference } from '../../common/types';
import { TopicName } from './types';
/**
 * Class for topic detection
 * @internal
 */
export declare class Topic {
    private external;
    topicName: TopicName;
    private static readonly topicNameMap;
    private static readonly topicIdMap;
    constructor(external: ExternalReference);
    getType(): TopicName;
    /**
     * Converts a TopicName enum value to its corresponding integer ID
     * @param topicName The topic name to convert
     * @returns The integer ID for the topic
     * @throws InworldError If the topic name is invalid
     */
    static getTopicId(topicName: TopicName): number;
    getExternal(): any;
}
/**
 * @class DetectedTopic
 * Represents a detected topic in the content with its confidence score.
 * @internal
 */
export declare class DetectedTopic extends Topic {
    confidence: number;
    topicName: TopicName;
    constructor(external: ExternalReference);
    constructor(topicName: TopicName, confidence: number);
}
