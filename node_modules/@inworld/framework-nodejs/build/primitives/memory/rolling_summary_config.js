"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RollingSummaryConfig = void 0;
const expose_binary_1 = require("../../expose_binary");
const llm_1 = require("../llm");
/**
 * Class for configuring rolling summary settings.
 * Manages parameters that control how conversation summaries are created and updated.
 * @internal
 */
class RollingSummaryConfig {
    /**
     * Creates a new RollingSummaryConfig instance.
     *
     * @param params - Optional configuration parameters
     */
    constructor(params) {
        this.external = expose_binary_1.RollingSummaryConfigFunctions.new();
        if (params) {
            if (params.numberOfTurnsBeforeSummary !== undefined) {
                expose_binary_1.RollingSummaryConfigFunctions.setNumberOfTurnsBeforeSummary(this.external, params.numberOfTurnsBeforeSummary);
            }
            if (params.startWindowSize !== undefined) {
                expose_binary_1.RollingSummaryConfigFunctions.setStartWindowSize(this.external, params.startWindowSize);
            }
            if (params.maxSummarySentences !== undefined) {
                expose_binary_1.RollingSummaryConfigFunctions.setMaxSummarySentences(this.external, params.maxSummarySentences);
            }
            if (params.textGenerationConfig !== undefined) {
                expose_binary_1.RollingSummaryConfigFunctions.setTextGenerationConfig(this.external, new llm_1.TextGenerationConfig(params.textGenerationConfig).getExternal());
            }
        }
    }
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal() {
        return this.external;
    }
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy() {
        if (this.external) {
            expose_binary_1.RollingSummaryConfigFunctions.delete(this.external);
            this.external = null;
        }
    }
}
exports.RollingSummaryConfig = RollingSummaryConfig;
