import { TextGenerationConfigInterface } from '../llm';
/**
 * Interface for configuring rolling summary behavior.
 */
export interface RollingSummaryConfigInterface {
    /** Number of conversation turns before generating/updating the summary */
    numberOfTurnsBeforeSummary?: number;
    /** Initial number of turns to consider when creating the first summary */
    startWindowSize?: number;
    /** Maximum number of sentences to include in the summary */
    maxSummarySentences?: number;
    /** Configuration for text generation used in summary processing */
    textGenerationConfig?: TextGenerationConfigInterface;
}
/**
 * Class for configuring rolling summary settings.
 * Manages parameters that control how conversation summaries are created and updated.
 * @internal
 */
export declare class RollingSummaryConfig {
    private external;
    /**
     * Creates a new RollingSummaryConfig instance.
     *
     * @param params - Optional configuration parameters
     */
    constructor(params?: RollingSummaryConfigInterface);
    /**
     * Returns the external reference to the native config implementation.
     *
     * @returns External reference object
     */
    getExternal(): any;
    /**
     * Cleans up resources associated with this configuration.
     */
    destroy(): void;
}
